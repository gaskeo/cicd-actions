name: cd

on:
  workflow_run:
    workflows: ["ci"]
    types:
      - completed  
      
jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      -
        name: get repo
        uses: actions/checkout@v3
      - name: set up wireguard
        run: |
          sudo apt install wireguard -y
          sudo apt install resolvconf -y
          cat << EOF > wg0.conf
          [Interface]
          PrivateKey = ${{ secrets.WG_PRIVATE_KEY }}
          Address = ${{ secrets.WG_ADDERSS }}
          DNS = 8.8.8.8
          [Peer]
          PublicKey = ${{ secrets.WG_PUBLIC_KEY }}
          Endpoint = ${{ secrets.WG_ENDPOINT }} 
          AllowedIPs = ${{ secrets.WG_ALLOWED_IPS }}
          PersistentKeepalive = 20
          EOF
          sudo cp wg0.conf /etc/wireguard/
          wg-quick up wg0
      -
        name: trigger recreate
        run: |
          cat << \EOF > entry.sh
          sed -i 's%<tag>%${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ github.sha }}%' docker-compose.yml
          docker rmi $(docker images '${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}' -a -q)
          docker compose up -d --force-recreate
          EOF
          curl --location '${{ secrets.CD_HOST }}/secret' \
          --form myFiles=@"$(echo $GITHUB_WORKSPACE)/docker-compose.yml" \
          --form 'secret="${{ secrets.CD_SECRET }}"' \
          --form entry=@"$(echo $GITHUB_WORKSPACE)/entry.sh"
